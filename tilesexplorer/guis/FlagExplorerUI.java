/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tilesexplorer.guis;

import java.lang.reflect.Field;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.powerbot.game.api.wrappers.Tile;

/**
 *
 * @author VOLT
 */
public class FlagExplorerUI extends javax.swing.JFrame {

    private final int flag;
    private final DefaultTableModel model;

    public int getFlag() {
        return flag;
    }

    /**
     * Creates new form FlagExplorerUI
     */
    public FlagExplorerUI(int flag) {
        this.flag = flag;
        this.model = generateTable();
        initComponents();
    }

    private DefaultTableModel generateTable() {
        Field[] fields = Tile.Flag.class.getFields();
        Object[][] data = new Object[fields.length][4];
        for (int i = 0; i < fields.length; i++) {
            Field field = fields[i];
            data[i][0] = field.getName();
            try {
                int mask = field.getInt(null);
                int val = mask & flag;
                data[i][1] = Integer.toBinaryString(mask);
                data[i][2] = Integer.toBinaryString(val);
                data[i][3] = val == mask;
            } catch (IllegalArgumentException | IllegalAccessException ex) {
                Logger.getLogger(FlagExplorerUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        String flagString = Integer.toBinaryString(flag);
        return new DefaultTableModel(data,
                new Object[]{"Mask name", "mask & " + flagString,
                    "mask & " + flagString + " = ", "(mask & " + flagString + ") == mask"});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(model);
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
